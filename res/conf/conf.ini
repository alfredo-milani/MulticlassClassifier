# [LEGEND]
#   [opt] := optional parameter
#   [dft] := default value
#   [mnd] := mandatory parameter

[GENERAL]
# [opt] - Directory for temporary files.
# [dft] - /tmp
tmp = /Volumes/Ramdisk/

# [opt] - Set verbose level to debug.
# [dft] - False
debug = True


[TRAINING]
# [mnd] - Dataset for training purpose (fully qualified path name).
dataset.train = /Volumes/Data/Projects/Python/MulticlassClassifier/res/dataset/training_set.csv
# dataset.train = C:\Users\Mauro\PycharmProjects\MulticlassClassifier\res\dataset\training_set.csv

# [opt] - Set test ratio from dataset.
# [dft] - 0.2
# dataset.test_ratio = 0.3

# [opt] - Seed for RNG.
# [dft] - 0
rng.seed = 43531
# rng.seed = 2873587

# [opt] - Compute pair-plot.
# [dft] - False
# pair_plot.compute = True

# [opt] - Save pair-plot on file.
# [dft] - False
# pair_plot.save = True

# [opt] - Thread to use during training.
# [dft] - 1
jobs = 4
# jobs = 24

# [opt] - Best classifier dump. Set to True, to not recompute training.
# [dft] - False
classifier.dump = True

[MOBD]
# [opt] - Best benchmark computed for F1-score metric.
# [dft] - (0.0 - '')
benchmark.best_found = (0.8444, 'Multi-Layer Perceptron')

# [opt] - Current benchmark threshold evaluation and deadline (time format: dd/mm/yyyy).
# [dft] - (0.0 - datetime.today())
benchmark.threshold = (0.8906, '04/09/2020')

# [opt] - Dataset for project evaluation (fully qualified path name).
#   If tool shutdown without message error, probably the format of test set file is wrong.
#   By default this tool manages test file without index column (so, saved from pandas.data_frame.to_csv('path', index=False)).
#   If you want to input test set file with index column just go to Evaluator.__init__() and change line
#     self.__test = Set(pd.read_csv(self.conf.dataset_test)) to self.__test = Set(pd.read_csv(self.conf.dataset_test, index_col=0)).
# [dft] - ''
dataset.test = /Volumes/Data/Projects/Python/MulticlassClassifier/res/dataset/test_set_no_index.csv
# dataset.test = /Volumes/Data/Projects/Python/MulticlassClassifier/res/dataset/test_set_index.csv
# dataset.test = /Volumes/Data/Projects/Python/MulticlassClassifier/res/dataset/test_set_no_index_features.csv
# dataset.test = C:\Users\Mauro\PycharmProjects\MulticlassClassifier\res\dataset\test_set_no_index.csv
# dataset.test = C:\Users\Mauro\PycharmProjects\MulticlassClassifier\res\dataset\test_set_index.csv
# dataset.test = C:\Users\Mauro\PycharmProjects\MulticlassClassifier\res\dataset\test_set_no_index_features.csv


# TODO
#   - vedere se gestione outliers Ã¨ utile anche se si usa MinMaxScaler
#   - vedere se usando altri sampler i classificatori performano meglio
#   - provare un approccio di tipo wrapper, il Recursive Feature Elimination o il SelectFromModel di sklearn